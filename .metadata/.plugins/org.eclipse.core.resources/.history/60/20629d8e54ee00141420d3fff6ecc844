package hr.fer.zemris.linearna;

import java.util.Arrays;
import java.util.stream.Stream;

public class MatrixSubMatrixView extends AbstractMatrix {
	
	private IMatrix original;
	private int[] rowIndexes;
	private int[] colIndexes;
	
	public MatrixSubMatrixView(IMatrix original, int row, int col) {
		rowIndexes = new int[original.getRowsCount() - 1];
		colIndexes = new int[original.getColsCount() - 1];
		
		
	}
	private MatrixSubMatrixView(IMatrix original, int[] rowIndexes, int[] colIndexes) {
		
	}
	public IMatrix subMatrix(int row, int col, boolean liveView) {
		
	}
	@Override
	public int getRowsCount() {
		return rowIndexes.length;
	}
	@Override
	public int getColsCount() {
		return colIndexes.length;
	}
	@Override
	public double get(int row, int col) {
		return original.get(rowIndexes[row], colIndexes[col]);
	}
	@Override
	public IMatrix set(int row, int col, double value) {
		original.set(rowIndexes[row], colIndexes[col], value);
		return this;
	}
	@Override
	public IMatrix copy() {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public IMatrix newInstance(int rows, int cols) {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public double[][] toArray() {
		// TODO Auto-generated method stub
		return null;
	}

}
